{
    "status": "1",
    "message": "OK-Missing/Invalid API Key, rate limit of 1/5sec applied",
    "result": [
        {
            "SourceCode": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity 0.8.15;\r\n\r\n/**\r\n * @title Storage\r\n * @dev Store & retrieve value in a variable\r\n */\r\ncontract Storage {\r\n\r\n    uint256 number;\r\n\r\n    /**\r\n     * @dev Store value in variable\r\n     * @param num value to store\r\n     */\r\n    function store(uint256 num) public {\r\n        number = num;\r\n    }\r\n\r\n    /**\r\n     * @dev Return value \r\n     * @return value of 'number'\r\n     */\r\n    function retrieve() public view returns (uint256){\r\n        return number;\r\n    }\r\n}",
            "ABI": "[{\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
            "ContractName": "Storage",
            "CompilerVersion": "v0.8.15+commit.e14f2714",
            "OptimizationUsed": "0",
            "Runs": "200",
            "ConstructorArguments": "",
            "EVMVersion": "Default",
            "Library": "",
            "LicenseType": "GNU GPLv3",
            "Proxy": "0",
            "Implementation": "",
            "SwarmSource": "ipfs://b8640e52060c8f6aa7ee3190151cdb5d0ce3de23c96106dfae11793a6b95feee"
        }
    ]
}